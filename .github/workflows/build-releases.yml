name: Build Releases

on:
  workflow_dispatch:
    inputs:
      godot_tag:
        description: Godot Github tag
        required: true
        type: string
        default: '3.5.2-stable'

jobs:
  env-setup:
    name: Setup Env Variables
    runs-on: ubuntu-latest
    outputs:
      zip_tag: ${{ steps.set_zip_tag.outputs.zip_tag }}
      release_title: ${{ steps.set_release_title.outputs.release_title }}
      godot_version: ${{ steps.set_godot_version.outputs.godot_version }}
    steps:
      - name: Set Zip Tag
        id: set_zip_tag
        run: |
          gtag=${{ inputs.godot_tag }}
          gtag=${gtag//[.]/}
          tag=godot-${gtag%-*}-${GITHUB_REF##*/}
          echo "zip_tag=${tag}" >> $GITHUB_OUTPUT
      - name: Set Release Title
        id: set_release_title
        run: |
          title="Godot"
          echo "release_title=${title}" >> $GITHUB_OUTPUT
      - name: Set Godot Version
        id: set_godot_version
        run: |
          gv=${{ inputs.godot_tag }}
          gv=${gv//[.]/}
          gv=${gv%-*}
          echo "godot_version=${gv}" >> $GITHUB_OUTPUT

  # Linux Builds

  build-linux-editor:
    needs: [env-setup]
    uses: ./.github/workflows/build-linux-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      binary_name: "godot.x11.opt.tools.64"
      export_name: "linux-${{ needs.env-setup.outputs.godot_version }}-editor.64"
      build_params: "-j4 platform=x11 production=yes tools=yes target=release_debug bits=64"
      artifact_name: "linux-editor"

  build-linux-release-template:
    needs: [env-setup]
    uses: ./.github/workflows/build-linux-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      binary_name: "godot.x11.opt.64"
      export_name: "linux-${{ needs.env-setup.outputs.godot_version }}-template.64"
      build_params: "-j4 platform=x11 production=yes tools=no target=release bits=64"
      artifact_name: "linux-release-template"

  build-linux-debug-template:
    needs: [env-setup]
    uses: ./.github/workflows/build-linux-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      binary_name: "godot.x11.opt.debug.64"
      export_name: "linux-${{ needs.env-setup.outputs.godot_version }}-debug-template.64"
      build_params: "-j4 platform=x11 production=yes tools=no target=release_debug bits=64"
      artifact_name: "linux-debug-template"

  create-linux-bundle:
    needs: [env-setup, build-linux-editor, build-linux-release-template, build-linux-debug-template]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Editor
        uses: actions/download-artifact@v3
        with:
          name: linux-editor
          path: files
      - name: Download Linux Release Template
        uses: actions/download-artifact@v3
        with:
          name: linux-release-template
          path: files
      - name: Download Linux Debug Template
        uses: actions/download-artifact@v3
        with:
          name: linux-debug-template
          path: files
      - name: Create Linux Bundle
        run: |
          zip -j linux64-${{ needs.env-setup.outputs.zip_tag }}.zip files/*
      - name: Upload Win64 bundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux64-${{ needs.env-setup.outputs.zip_tag }}.zip
          path: linux64-${{ needs.env-setup.outputs.zip_tag }}.zip
          if-no-files-found: error
          retention-days: 1

  # Windows Builds

  build-win64-editor:
    needs: [env-setup]
    uses: ./.github/workflows/build-windows-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      binary_name: godot.windows.opt.tools.64.exe
      export_name: "windows-${{ needs.env-setup.outputs.godot_version }}-editor-64bit.exe"
      build_params: "-j4 platform=windows production=yes tools=yes target=release_debug debug_symbols=no"
      artifact_name: "win64-editor"

  build-win64-release-template:
    needs: [env-setup]
    uses: ./.github/workflows/build-windows-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      binary_name: godot.windows.opt.64.exe
      export_name: "windows-${{ needs.env-setup.outputs.godot_version }}-template-64bit.exe"
      build_params: "-j4 platform=windows production=yes tools=no target=release debug_symbols=no"
      artifact_name: "win64-release-template"

  build-win64-debug-template:
    needs: [env-setup]
    uses: ./.github/workflows/build-windows-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      binary_name: godot.windows.opt.debug.64.exe
      export_name: "windows-${{ needs.env-setup.outputs.godot_version }}-debug-template-64bit.exe"
      build_params: "-j4 platform=windows production=yes tools=no target=release_debug debug_symbols=no"
      artifact_name: "win64-debug-template"

  create-win64-bundle:
    needs: [env-setup, build-win64-editor, build-win64-release-template, build-win64-debug-template]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Editor
        uses: actions/download-artifact@v3
        with:
          name: win64-editor
          path: files
      - name: Download Windows Release Template
        uses: actions/download-artifact@v3
        with:
          name: win64-release-template
          path: files
      - name: Download Windows Debug Template
        uses: actions/download-artifact@v3
        with:
          name: win64-debug-template
          path: files
      - name: Create Windows Bundle
        run: |
          zip -j win64-${{ needs.env-setup.outputs.zip_tag }}.zip files/*
      - name: Upload Win64 bundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: win64-${{ needs.env-setup.outputs.zip_tag }}.zip
          path: win64-${{ needs.env-setup.outputs.zip_tag }}.zip
          if-no-files-found: error
          retention-days: 1

  # macOS Builds

  build-macos-editor-x86_64:
    needs: [env-setup]
    uses: ./.github/workflows/build-macos-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      export_name: "godot.osx.tools.x86_64"
      build_params: "-j6 platform=osx arch=x86_64 production=yes tools=yes --jobs=$(sysctl -n hw.logicalcpu)"
      artifact_name: "macos-editor-x86_64"

  build-macos-release-template-x86_64:
    needs: [env-setup]
    uses: ./.github/workflows/build-macos-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      export_name: "godot.osx.opt.x86_64"
      build_params: "-j6 platform=osx arch=x86_64 production=yes tools=no target=release --jobs=$(sysctl -n hw.logicalcpu)"
      artifact_name: "macos-release-template-x86_64"

  build-macos-debug-template-x86_64:
    needs: [env-setup]
    uses: ./.github/workflows/build-macos-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      export_name: "godot.osx.opt.debug.x86_64"
      build_params: "-j6 platform=osx arch=x86_64 production=yes tools=no target=release_debug --jobs=$(sysctl -n hw.logicalcpu)"
      artifact_name: "macos-debug-template-x86_64"

  build-macos-editor-arm64:
    needs: [env-setup]
    uses: ./.github/workflows/build-macos-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      export_name: "godot.osx.tools.arm64"
      build_params: "-j6 platform=osx arch=arm64 production=yes tools=yes --jobs=$(sysctl -n hw.logicalcpu)"
      artifact_name: "macos-editor-arm64"

  build-macos-release-template-arm64:
    needs: [env-setup]
    uses: ./.github/workflows/build-macos-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      export_name: "godot.osx.opt.arm64"
      build_params: "-j6 platform=osx arch=arm64 production=yes tools=no target=release --jobs=$(sysctl -n hw.logicalcpu)"
      artifact_name: "macos-release-template-arm64"

  build-macos-debug-template-arm64:
    needs: [env-setup]
    uses: ./.github/workflows/build-macos-artifact.yml
    with:
      godot_tag: ${{ inputs.godot_tag }}
      export_name: "godot.osx.opt.debug.arm64"
      build_params: "-j6 platform=osx arch=arm64 production=yes tools=no target=release_debug --jobs=$(sysctl -n hw.logicalcpu)"
      artifact_name: "macos-debug-template-arm64"

  create-macos-bundle:
    needs: [env-setup, build-macos-editor-x86_64, build-macos-release-template-x86_64, build-macos-debug-template-x86_64, build-macos-editor-arm64, build-macos-release-template-arm64, build-macos-debug-template-arm64]
    runs-on: macos-latest
    steps:
      - name: Download MacOS x86_64 Editor
        uses: actions/download-artifact@v3
        with:
          name: macos-editor-x86_64
          path: files
      - name: Download MacOS ARM Editor
        uses: actions/download-artifact@v3
        with:
          name: macos-editor-arm64
          path: files
      - name: Download MacOS x86_64 Release Template
        uses: actions/download-artifact@v3
        with:
          name: macos-release-template-x86_64
          path: files
      - name: Download MacOS x86_64 Debug Template
        uses: actions/download-artifact@v3
        with:
          name: macos-debug-template-x86_64
          path: files
      - name: Download MacOS ARM Release Template
        uses: actions/download-artifact@v3
        with:
          name: macos-release-template-arm64
          path: files
      - name: Download MacOS ARM Debug Template
        uses: actions/download-artifact@v3
        with:
          name: macos-debug-template-arm64
          path: files
      - name: Download MacOS Tool App
        uses: actions/download-artifact@v3
        with:
          name: macos-tool-app
          path: files
      - name: Download MacOS Template App
        uses: actions/download-artifact@v3
        with:
          name: macos-template-app
          path: files
      - name: Create MacOS Bundle
        run: |
          lipo -create files/godot.osx.tools.x86_64 files/godot.osx.tools.arm64 -output files/godot.osx.tools.universal
          lipo -create files/godot.osx.opt.x86_64 files/godot.osx.opt.arm64 -output files/godot.osx.opt.universal
          lipo -create files/godot.osx.opt.debug.x86_64 files/godot.osx.opt.debug.arm64 -output files/godot.osx.opt.debug.universal
          unzip files/osx_tools.zip -d files
          unzip files/osx_template.zip -d files
          mv files/osx_tools.app files/GodotEditor.app
          mkdir files/GodotEditor.app/Contents/MacOS
          mv files/godot.osx.tools.universal files/GodotEditor.app/Contents/MacOS/godot
          chmod +x files/GodotEditor.app/Contents/MacOS/godot
          mkdir files/osx_template.app/Contents/MacOS
          mv files/godot.osx.opt.universal files/osx_template.app/Contents/MacOS/godot_osx_release.64
          mv files/godot.osx.opt.debug.universal files/osx_template.app/Contents/MacOS/godot_osx_release_debug.64
          chmod +x files/osx_template.app/Contents/MacOS/godot_osx*
          pushd files
          zip -r ./macos.zip ./osx_template.app
          zip -r ../macos-${{ needs.env-setup.outputs.zip_tag }}.zip ./macos.zip ./GodotEditor.app
          popd
      - name: Upload MacOS bundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-${{ needs.env-setup.outputs.zip_tag }}.zip
          path: macos-${{ needs.env-setup.outputs.zip_tag }}.zip
          if-no-files-found: error
          retention-days: 1

  # Create Template Bundles

  create-templates-bundle:
    needs: [env-setup, build-linux-release-template, build-linux-debug-template, build-win64-release-template, build-win64-debug-template, build-macos-release-template-x86_64, build-macos-debug-template-x86_64, build-macos-release-template-arm64, build-macos-debug-template-arm64]
    runs-on: macos-latest
    steps:
      - name: Download Windows 64 Bit Release Template
        uses: actions/download-artifact@v3
        with:
          name: win64-release-template
          path: files
      - name: Download Windows 64 Bit Debug Template
        uses: actions/download-artifact@v3
        with:
          name: win64-debug-template
          path: files
      - name: Download Linux Release Template
        uses: actions/download-artifact@v3
        with:
          name: linux-release-template
          path: files
      - name: Download Linux Debug Template
        uses: actions/download-artifact@v3
        with:
          name: linux-debug-template
          path: files
      - name: Download MacOS x86_64 Release Template
        uses: actions/download-artifact@v3
        with:
          name: macos-release-template-x86_64
          path: files
      - name: Download MacOS x86_64 Debug Template
        uses: actions/download-artifact@v3
        with:
          name: macos-debug-template-x86_64
          path: files
      - name: Download MacOS ARM Release Template
        uses: actions/download-artifact@v3
        with:
          name: macos-release-template-arm64
          path: files
      - name: Download MacOS ARM Debug Template
        uses: actions/download-artifact@v3
        with:
          name: macos-debug-template-arm64
          path: files
      - name: Download MacOS Template App
        uses: actions/download-artifact@v3
        with:
          name: macos-template-app
          path: files
      - name: Create Template Bundle
        run: |
          lipo -create files/godot.osx.opt.x86_64 files/godot.osx.opt.arm64 -output files/godot.osx.opt.universal
          lipo -create files/godot.osx.opt.debug.x86_64 files/godot.osx.opt.debug.arm64 -output files/godot.osx.opt.debug.universal
          rm files/godot.osx.opt.x86_64 files/godot.osx.opt.arm64 files/godot.osx.opt.debug.x86_64 files/godot.osx.opt.debug.arm64
          unzip files/osx_template.zip -d files
          rm -r files/osx_template.zip
          mkdir files/osx_template.app/Contents/MacOS
          mv files/godot.osx.opt.universal files/osx_template.app/Contents/MacOS/godot_osx_release.64
          mv files/godot.osx.opt.debug.universal files/osx_template.app/Contents/MacOS/godot_osx_release_debug.64
          chmod +x files/osx_template.app/Contents/MacOS/godot_osx*
          pushd files
          zip -r ./macos.zip ./osx_template.app
          popd
          rm -r files/osx_template.app/
          zip -j ${{ needs.env-setup.outputs.zip_tag }}-templates.zip files/*
      - name: Upload template bundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.env-setup.outputs.zip_tag }}-templates.zip
          path: ${{ needs.env-setup.outputs.zip_tag }}-templates.zip
          if-no-files-found: error
          retention-days: 1

  # Create Release and upload artifacts

  create-release:
    needs: [env-setup, create-templates-bundle, create-linux-bundle, create-macos-bundle, create-win64-bundle]
    permissions: write-all
    runs-on: macos-latest
    steps:
    - name: Download Win64 bundle
      uses: actions/download-artifact@v3
      with:
        name: win64-${{ needs.env-setup.outputs.zip_tag }}.zip
    - name: Download Linux bundle
      uses: actions/download-artifact@v3
      with:
        name: linux64-${{ needs.env-setup.outputs.zip_tag }}.zip
    - name: Download Macos bundle
      uses: actions/download-artifact@v3
      with:
        name: macos-${{ needs.env-setup.outputs.zip_tag }}.zip
    - name: Download Template bundle
      uses: actions/download-artifact@v3
      with:
        name: ${{ needs.env-setup.outputs.zip_tag }}-templates.zip
    - name: Upload Win64 bundle to release
      uses: svenstaro/upload-release-action@v2
      with:
        file: win64-${{ needs.env-setup.outputs.zip_tag }}.zip
        tag: ${{ needs.env-setup.outputs.zip_tag }}
        overwrite: true
        release_name: ${{ needs.env-setup.outputs.release_title }}
        prerelease: false
        body: |
          Godot Engine ${{ inputs.godot_tag }}
    - name: Upload Linux bundle to release
      uses: svenstaro/upload-release-action@v2
      with:
        file: linux64-${{ needs.env-setup.outputs.zip_tag }}.zip
        tag: ${{ needs.env-setup.outputs.zip_tag }}
        overwrite: true
    - name: Upload MacOS bundle to release
      uses: svenstaro/upload-release-action@v2
      with:
        file: macos-${{ needs.env-setup.outputs.zip_tag }}.zip
        tag: ${{ needs.env-setup.outputs.zip_tag }}
        overwrite: true
    - name: Upload template bundle to release
      uses: svenstaro/upload-release-action@v2
      with:
        file: ${{ needs.env-setup.outputs.zip_tag }}-templates.zip
        tag: ${{ needs.env-setup.outputs.zip_tag }}
        overwrite: true
